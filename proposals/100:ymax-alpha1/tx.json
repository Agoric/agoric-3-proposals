{
    "height": "20582951",
    "txhash": "0DC3680DE5854A12104CDBCEB26DEACE24A2B4B8793F4F76F3844BD08B23E79B",
    "codespace": "",
    "code": 0,
    "data": "12330A2D2F636F736D6F732E676F762E763162657461312E4D73675375626D697450726F706F73616C526573706F6E736512020864",
    "raw_log": "[{\"msg_index\":0,\"events\":[{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/cosmos.gov.v1beta1.MsgSubmitProposal\"},{\"key\":\"sender\",\"value\":\"agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl\"},{\"key\":\"module\",\"value\":\"gov\"}]},{\"type\":\"submit_proposal\",\"attributes\":[{\"key\":\"proposal_id\",\"value\":\"100\"},{\"key\":\"proposal_messages\",\"value\":\",/cosmos.gov.v1.MsgExecLegacyContent\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl\"},{\"key\":\"amount\",\"value\":\"5000000000ubld\"}]},{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"agoric10d07y265gmmuvt4z0w9aw880jnsr700jgl36x9\"},{\"key\":\"amount\",\"value\":\"5000000000ubld\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"agoric10d07y265gmmuvt4z0w9aw880jnsr700jgl36x9\"},{\"key\":\"sender\",\"value\":\"agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl\"},{\"key\":\"amount\",\"value\":\"5000000000ubld\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"sender\",\"value\":\"agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl\"}]},{\"type\":\"proposal_deposit\",\"attributes\":[{\"key\":\"amount\",\"value\":\"5000000000ubld\"},{\"key\":\"proposal_id\",\"value\":\"100\"}]},{\"type\":\"submit_proposal\",\"attributes\":[{\"key\":\"voting_period_start\",\"value\":\"100\"}]}]}]",
    "logs": [
        {
            "msg_index": 0,
            "log": "",
            "events": [
                {
                    "type": "message",
                    "attributes": [
                        {
                            "key": "action",
                            "value": "/cosmos.gov.v1beta1.MsgSubmitProposal"
                        },
                        {
                            "key": "sender",
                            "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl"
                        },
                        {
                            "key": "module",
                            "value": "gov"
                        }
                    ]
                },
                {
                    "type": "submit_proposal",
                    "attributes": [
                        {
                            "key": "proposal_id",
                            "value": "100"
                        },
                        {
                            "key": "proposal_messages",
                            "value": ",/cosmos.gov.v1.MsgExecLegacyContent"
                        }
                    ]
                },
                {
                    "type": "coin_spent",
                    "attributes": [
                        {
                            "key": "spender",
                            "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl"
                        },
                        {
                            "key": "amount",
                            "value": "5000000000ubld"
                        }
                    ]
                },
                {
                    "type": "coin_received",
                    "attributes": [
                        {
                            "key": "receiver",
                            "value": "agoric10d07y265gmmuvt4z0w9aw880jnsr700jgl36x9"
                        },
                        {
                            "key": "amount",
                            "value": "5000000000ubld"
                        }
                    ]
                },
                {
                    "type": "transfer",
                    "attributes": [
                        {
                            "key": "recipient",
                            "value": "agoric10d07y265gmmuvt4z0w9aw880jnsr700jgl36x9"
                        },
                        {
                            "key": "sender",
                            "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl"
                        },
                        {
                            "key": "amount",
                            "value": "5000000000ubld"
                        }
                    ]
                },
                {
                    "type": "message",
                    "attributes": [
                        {
                            "key": "sender",
                            "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl"
                        }
                    ]
                },
                {
                    "type": "proposal_deposit",
                    "attributes": [
                        {
                            "key": "amount",
                            "value": "5000000000ubld"
                        },
                        {
                            "key": "proposal_id",
                            "value": "100"
                        }
                    ]
                },
                {
                    "type": "submit_proposal",
                    "attributes": [
                        {
                            "key": "voting_period_start",
                            "value": "100"
                        }
                    ]
                }
            ]
        }
    ],
    "info": "",
    "gas_wanted": "20047199",
    "gas_used": "15433472",
    "tx": {
        "@type": "/cosmos.tx.v1beta1.Tx",
        "body": {
            "messages": [
                {
                    "@type": "/cosmos.gov.v1beta1.MsgSubmitProposal",
                    "content": {
                        "@type": "/agoric.swingset.CoreEvalProposal",
                        "title": "YMax Alpha 1: A Step Toward Seamless DeFi Control",
                        "description": "\nbackground / discussion:\n - [YMax PoC: A Step Toward Seamless DeFi Control](https://community.agoric.com/t/ymax-poc-a-step-toward-seamless-defi-control/864)\n\ncommit f741807",
                        "evals": [
                            {
                                "json_permits": "{\n  \"consume\": {\n    \"agoricNamesAdmin\": \"makeCoreProposalBehavior\",\n    \"getDepositFacet\": true,\n    \"bankManager\": true,\n    \"board\": true,\n    \"chainStorage\": true,\n    \"startUpgradable\": true,\n    \"namesByAddress\": true,\n    \"namesByAddressAdmin\": true,\n    \"vatAdminSvc\": \"makeCoreProposalBehavior\",\n    \"zoe\": \"makeCoreProposalBehavior\"\n  },\n  \"brand\": {\n    \"produce\": {\n      \"PoC26\": true\n    }\n  },\n  \"issuer\": {\n    \"produce\": {\n      \"PoC26\": true\n    }\n  },\n  \"installation\": {\n    \"consume\": {\n      \"mintHolder\": true\n    },\n    \"produce\": \"makeCoreProposalBehavior\"\n  },\n  \"produce\": {\n    \"getDepositFacet\": true\n  },\n  \"evaluateBundleCap\": \"makeCoreProposalBehavior\",\n  \"modules\": {\n    \"utils\": {\n      \"runModuleBehaviors\": \"makeCoreProposalBehavior\"\n    }\n  }\n}",
                                "js_code": "// This is generated by writeCoreEval; please edit!\n/* eslint-disable */\n\nconst manifestBundleRef = {bundleID:\"b1-06934dae7861f141432664315f14def6ca9dc2790dba3fab70246ae1d1cf4f9bbe4688406eb9b8e60153da16a89af4d3105f17d6a40873d836f74051c7c9e954\"};\nconst getManifestCall = harden([\n  \"getManifestCall\",\n  {\n    beneficiary: \"agoric16nwqe7452za92rwvnldmfdqr34n5rzhphe9sjy\",\n    qty: 50000000,\n  },\n]);\nconst customManifest = {\n  createPoCAsset: {\n    brand: {\n      produce: {\n        PoC26: true,\n      },\n    },\n    consume: {\n      agoricNamesAdmin: true,\n      bankManager: true,\n      board: true,\n      chainStorage: true,\n      getDepositFacet: true,\n      startUpgradable: true,\n    },\n    installation: {\n      consume: {\n        mintHolder: true,\n      },\n    },\n    issuer: {\n      produce: {\n        PoC26: true,\n      },\n    },\n  },\n  produceAttenuatedDeposit: {\n    consume: {\n      namesByAddress: true,\n      namesByAddressAdmin: true,\n    },\n    produce: {\n      getDepositFacet: true,\n    },\n  },\n};\n\n// Make a behavior function and \"export\" it by way of script completion value.\n// It is constructed by an anonymous invocation to ensure the absence of a global binding\n// for makeCoreProposalBehavior, which may not be necessary but preserves behavior pre-dating\n// https://github.com/Agoric/agoric-sdk/pull/8712 .\nconst behavior = (({\n  manifestBundleRef,\n  getManifestCall: [manifestGetterName, ...manifestGetterArgs],\n  customManifest,\n  E,\n  log = console.info,\n  customRestoreRef,\n}) =\u003e {\n  const { entries, fromEntries } = Object;\n\n  /**\n   * Given an object whose properties may be promise-valued, return a promise\n   * for an analogous object in which each such value has been replaced with its\n   * fulfillment.\n   * This is a non-recursive form of endo `deeplyFulfilled`.\n   *\n   * @template T\n   * @param {{[K in keyof T]: (T[K] | Promise\u003cT[K]\u003e)}} obj\n   * @returns {Promise\u003cT\u003e}\n   */\n  const shallowlyFulfilled = async obj =\u003e {\n    if (!obj) {\n      return obj;\n    }\n    const awaitedEntries = await Promise.all(\n      entries(obj).map(async ([key, valueP]) =\u003e {\n        const value = await valueP;\n        return [key, value];\n      }),\n    );\n    return fromEntries(awaitedEntries);\n  };\n\n  const makeRestoreRef = (vatAdminSvc, zoe) =\u003e {\n    /** @type {(ref: import\\('./externalTypes.js').ManifestBundleRef) =\u003e Promise\u003cInstallation\u003cunknown\u003e\u003e} */\n    const defaultRestoreRef = async bundleRef =\u003e {\n      // extract-proposal.js creates these records, and bundleName is\n      // the optional name under which the bundle was installed into\n      // config.bundles\n      const bundleIdP =\n        'bundleName' in bundleRef\n          ? E(vatAdminSvc).getBundleIDByName(bundleRef.bundleName)\n          : bundleRef.bundleID;\n      const bundleID = await bundleIdP;\n      const label = bundleID.slice(0, 8);\n      return E(zoe).installBundleID(bundleID, label);\n    };\n    return defaultRestoreRef;\n  };\n\n  /** @param {ChainBootstrapSpace \u0026 BootstrapPowers \u0026 { evaluateBundleCap: any }} powers */\n  const coreProposalBehavior = async powers =\u003e {\n    // NOTE: `powers` is expected to match or be a superset of the above `permits` export,\n    // which should therefore be kept in sync with this deconstruction code.\n    // HOWEVER, do note that this function is invoked with at least the *union* of powers\n    // required by individual moduleBehaviors declared by the manifest getter, which is\n    // necessary so it can use `runModuleBehaviors` to provide the appropriate subset to\n    // each one (see ./writeCoreEvalParts.js).\n    // Handle `powers` with the requisite care.\n    const {\n      consume: { vatAdminSvc, zoe, agoricNamesAdmin },\n      evaluateBundleCap,\n      installation: { produce: produceInstallations },\n      modules: {\n        utils: { runModuleBehaviors },\n      },\n    } = powers;\n\n    // Get the on-chain installation containing the manifest and behaviors.\n    log('evaluateBundleCap', {\n      manifestBundleRef,\n      manifestGetterName,\n      vatAdminSvc,\n    });\n    let bcapP;\n    if ('bundleName' in manifestBundleRef) {\n      bcapP = E(vatAdminSvc).getNamedBundleCap(manifestBundleRef.bundleName);\n    } else if ('bundleID' in manifestBundleRef) {\n      bcapP = E(vatAdminSvc).getBundleCap(manifestBundleRef.bundleID);\n    } else {\n      const keys = Reflect.ownKeys(manifestBundleRef).map(key =\u003e\n        typeof key === 'string' ? JSON.stringify(key) : String(key),\n      );\n      const keysStr = `[${keys.join(', ')}]`;\n      throw Error(\n        `bundleRef must have own bundleName or bundleID, missing in ${keysStr}`,\n      );\n    }\n    const bundleCap = await bcapP;\n\n    const proposalNS = await evaluateBundleCap(bundleCap);\n\n    // Get the manifest and its metadata.\n    log('execute', {\n      manifestGetterName,\n      bundleExports: Object.keys(proposalNS),\n    });\n    const restoreRef = customRestoreRef || makeRestoreRef(vatAdminSvc, zoe);\n    const {\n      manifest,\n      options: rawOptions,\n      installations: rawInstallations,\n    } = await proposalNS[manifestGetterName](\n      harden({ restoreRef }),\n      ...manifestGetterArgs,\n    );\n\n    // Await promises in the returned options and installations records.\n    const [options, installations] = await Promise.all(\n      [rawOptions, rawInstallations].map(shallowlyFulfilled),\n    );\n\n    // Publish the installations for our dependencies.\n    const installationEntries = entries(installations || {});\n    if (installationEntries.length \u003e 0) {\n      const installAdmin = E(agoricNamesAdmin).lookupAdmin('installation');\n      await Promise.all(\n        installationEntries.map(([key, value]) =\u003e {\n          produceInstallations[key].reset();\n          produceInstallations[key].resolve(value);\n          return E(installAdmin).update(key, value);\n        }),\n      );\n    }\n\n    // Evaluate the manifest.\n    return runModuleBehaviors({\n      // Remember that `powers` may be arbitrarily broad.\n      allPowers: powers,\n      behaviors: proposalNS,\n      manifest: customManifest || manifest,\n      makeConfig: (name, _permit) =\u003e {\n        log('coreProposal:', name);\n        return { options };\n      },\n    });\n  };\n\n  return coreProposalBehavior;\n})({ manifestBundleRef, getManifestCall, customManifest, E });\nbehavior;\n"
                            },
                            {
                                "json_permits": "{\n  \"consume\": {\n    \"agoricNames\": true,\n    \"agoricNamesAdmin\": \"makeCoreProposalBehavior\",\n    \"chainStorage\": true,\n    \"vatAdminSvc\": \"makeCoreProposalBehavior\",\n    \"zoe\": \"makeCoreProposalBehavior\"\n  },\n  \"produce\": {\n    \"chainInfoPublished\": true\n  },\n  \"evaluateBundleCap\": \"makeCoreProposalBehavior\",\n  \"installation\": {\n    \"produce\": \"makeCoreProposalBehavior\"\n  },\n  \"modules\": {\n    \"utils\": {\n      \"runModuleBehaviors\": \"makeCoreProposalBehavior\"\n    }\n  }\n}",
                                "js_code": "// This is generated by writeCoreEval; please edit!\n/* eslint-disable */\n\nconst manifestBundleRef = {bundleID:\"b1-2127a1e2f296c89c04280272f3e110f4e4b56d98804200d001c9e49d9926e7d3130c81995ab3976a5962cd2199abeb2915a6c458c8700a2116bc6c01639e1f73\"};\nconst getManifestCall = harden([\n  \"getManifestForChainInfo\",\n  {\n    options: {\n      chainInfo: {\n        agoric: {\n          bech32Prefix: \"agoric\",\n          chainId: \"agoric-3\",\n          connections: {\n            \"axelar-dojo-1\": {\n              client_id: \"07-tendermint-11\",\n              counterparty: {\n                client_id: \"07-tendermint-69\",\n                connection_id: \"connection-51\",\n              },\n              id: \"connection-14\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-9\",\n                counterPartyChannelId: \"channel-41\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"core-1\": {\n              client_id: \"07-tendermint-93\",\n              counterparty: {\n                client_id: \"07-tendermint-167\",\n                connection_id: \"connection-210\",\n              },\n              id: \"connection-91\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-72\",\n                counterPartyChannelId: \"channel-202\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"cosmoshub-4\": {\n              client_id: \"07-tendermint-6\",\n              counterparty: {\n                client_id: \"07-tendermint-927\",\n                connection_id: \"connection-649\",\n              },\n              id: \"connection-8\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-5\",\n                counterPartyChannelId: \"channel-405\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"crescent-1\": {\n              client_id: \"07-tendermint-2\",\n              counterparty: {\n                client_id: \"07-tendermint-19\",\n                connection_id: \"connection-14\",\n              },\n              id: \"connection-2\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-2\",\n                counterPartyChannelId: \"channel-11\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"evmos_9001-2\": {\n              client_id: \"07-tendermint-72\",\n              counterparty: {\n                client_id: \"07-tendermint-116\",\n                connection_id: \"connection-70\",\n              },\n              id: \"connection-66\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-57\",\n                counterPartyChannelId: \"channel-85\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"kaiyo-1\": {\n              client_id: \"07-tendermint-20\",\n              counterparty: {\n                client_id: \"07-tendermint-94\",\n                connection_id: \"connection-64\",\n              },\n              id: \"connection-20\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-13\",\n                counterPartyChannelId: \"channel-61\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"kava_2222-10\": {\n              client_id: \"07-tendermint-78\",\n              counterparty: {\n                client_id: \"07-tendermint-147\",\n                connection_id: \"connection-182\",\n              },\n              id: \"connection-73\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-63\",\n                counterPartyChannelId: \"channel-133\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"neutron-1\": {\n              client_id: \"07-tendermint-101\",\n              counterparty: {\n                client_id: \"07-tendermint-148\",\n                connection_id: \"connection-108\",\n              },\n              id: \"connection-99\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-146\",\n                counterPartyChannelId: \"channel-5789\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"noble-1\": {\n              client_id: \"07-tendermint-77\",\n              counterparty: {\n                client_id: \"07-tendermint-32\",\n                connection_id: \"connection-38\",\n              },\n              id: \"connection-72\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-62\",\n                counterPartyChannelId: \"channel-21\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"omniflixhub-1\": {\n              client_id: \"07-tendermint-73\",\n              counterparty: {\n                client_id: \"07-tendermint-47\",\n                connection_id: \"connection-40\",\n              },\n              id: \"connection-67\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-58\",\n                counterPartyChannelId: \"channel-30\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"osmosis-1\": {\n              client_id: \"07-tendermint-1\",\n              counterparty: {\n                client_id: \"07-tendermint-2109\",\n                connection_id: \"connection-1649\",\n              },\n              id: \"connection-1\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-1\",\n                counterPartyChannelId: \"channel-320\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"quicksilver-2\": {\n              client_id: \"07-tendermint-85\",\n              counterparty: {\n                client_id: \"07-tendermint-84\",\n                connection_id: \"connection-60\",\n              },\n              id: \"connection-85\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-68\",\n                counterPartyChannelId: \"channel-125\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"secret-4\": {\n              client_id: \"07-tendermint-17\",\n              counterparty: {\n                client_id: \"07-tendermint-111\",\n                connection_id: \"connection-80\",\n              },\n              id: \"connection-17\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-10\",\n                counterPartyChannelId: \"channel-51\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"stride-1\": {\n              client_id: \"07-tendermint-74\",\n              counterparty: {\n                client_id: \"07-tendermint-129\",\n                connection_id: \"connection-118\",\n              },\n              id: \"connection-68\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-59\",\n                counterPartyChannelId: \"channel-148\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"umee-1\": {\n              client_id: \"07-tendermint-18\",\n              counterparty: {\n                client_id: \"07-tendermint-152\",\n                connection_id: \"connection-101\",\n              },\n              id: \"connection-18\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-11\",\n                counterPartyChannelId: \"channel-42\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n          },\n          icqEnabled: false,\n          namespace: \"cosmos\",\n          reference: \"agoric-3\",\n          stakingTokens: [\n            {\n              denom: \"ubld\",\n            },\n          ],\n        },\n        axelar: {\n          bech32Prefix: \"axelar\",\n          chainId: \"axelar-dojo-1\",\n          connections: {\n            \"agoric-3\": {\n              client_id: \"07-tendermint-69\",\n              counterparty: {\n                client_id: \"07-tendermint-11\",\n                connection_id: \"connection-14\",\n              },\n              id: \"connection-51\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-41\",\n                counterPartyChannelId: \"channel-9\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            celestia: {\n              client_id: \"07-tendermint-185\",\n              counterparty: {\n                client_id: \"07-tendermint-9\",\n                connection_id: \"connection-1\",\n              },\n              id: \"connection-163\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-125\",\n                counterPartyChannelId: \"channel-1\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"coreum-mainnet-1\": {\n              client_id: \"07-tendermint-179\",\n              counterparty: {\n                client_id: \"07-tendermint-7\",\n                connection_id: \"connection-7\",\n              },\n              id: \"connection-157\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-120\",\n                counterPartyChannelId: \"channel-6\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"cosmoshub-4\": {\n              client_id: \"07-tendermint-3\",\n              counterparty: {\n                client_id: \"07-tendermint-622\",\n                connection_id: \"connection-481\",\n              },\n              id: \"connection-2\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-2\",\n                counterPartyChannelId: \"channel-293\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"crescent-1\": {\n              client_id: \"07-tendermint-31\",\n              counterparty: {\n                client_id: \"07-tendermint-6\",\n                connection_id: \"connection-4\",\n              },\n              id: \"connection-17\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-7\",\n                counterPartyChannelId: \"channel-4\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"dymension_1100-1\": {\n              client_id: \"07-tendermint-197\",\n              counterparty: {\n                client_id: \"07-tendermint-7\",\n                connection_id: \"connection-6\",\n              },\n              id: \"connection-180\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-138\",\n                counterPartyChannelId: \"channel-5\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"empowerchain-1\": {\n              client_id: \"07-tendermint-158\",\n              counterparty: {\n                client_id: \"07-tendermint-2\",\n                connection_id: \"connection-2\",\n              },\n              id: \"connection-142\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-109\",\n                counterPartyChannelId: \"channel-2\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"evmos_9001-2\": {\n              client_id: \"07-tendermint-50\",\n              counterparty: {\n                client_id: \"07-tendermint-69\",\n                connection_id: \"connection-27\",\n              },\n              id: \"connection-31\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-22\",\n                counterPartyChannelId: \"channel-21\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"haqq_11235-1\": {\n              client_id: \"07-tendermint-162\",\n              counterparty: {\n                client_id: \"07-tendermint-1\",\n                connection_id: \"connection-1\",\n              },\n              id: \"connection-148\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-113\",\n                counterPartyChannelId: \"channel-1\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"injective-1\": {\n              client_id: \"07-tendermint-37\",\n              counterparty: {\n                client_id: \"07-tendermint-113\",\n                connection_id: \"connection-93\",\n              },\n              id: \"connection-20\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-10\",\n                counterPartyChannelId: \"channel-84\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"juno-1\": {\n              client_id: \"07-tendermint-25\",\n              counterparty: {\n                client_id: \"07-tendermint-150\",\n                connection_id: \"connection-97\",\n              },\n              id: \"connection-14\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-4\",\n                counterPartyChannelId: \"channel-71\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"kaiyo-1\": {\n              client_id: \"07-tendermint-42\",\n              counterparty: {\n                client_id: \"07-tendermint-11\",\n                connection_id: \"connection-6\",\n              },\n              id: \"connection-23\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-14\",\n                counterPartyChannelId: \"channel-9\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"lava-mainnet-1\": {\n              client_id: \"07-tendermint-225\",\n              counterparty: {\n                client_id: \"07-tendermint-0\",\n                connection_id: \"connection-0\",\n              },\n              id: \"connection-210\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-156\",\n                counterPartyChannelId: \"channel-0\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"migaloo-1\": {\n              client_id: \"07-tendermint-180\",\n              counterparty: {\n                client_id: \"07-tendermint-101\",\n                connection_id: \"connection-80\",\n              },\n              id: \"connection-158\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-121\",\n                counterPartyChannelId: \"channel-53\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"neutron-1\": {\n              client_id: \"07-tendermint-123\",\n              counterparty: {\n                client_id: \"07-tendermint-1\",\n                connection_id: \"connection-1\",\n              },\n              id: \"connection-110\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-78\",\n                counterPartyChannelId: \"channel-2\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"omniflixhub-1\": {\n              client_id: \"07-tendermint-122\",\n              counterparty: {\n                client_id: \"07-tendermint-44\",\n                connection_id: \"connection-37\",\n              },\n              id: \"connection-109\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-77\",\n                counterPartyChannelId: \"channel-27\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"osmosis-1\": {\n              client_id: \"07-tendermint-23\",\n              counterparty: {\n                client_id: \"07-tendermint-1862\",\n                connection_id: \"connection-1453\",\n              },\n              id: \"connection-13\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-3\",\n                counterPartyChannelId: \"channel-208\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"pacific-1\": {\n              client_id: \"07-tendermint-151\",\n              counterparty: {\n                client_id: \"07-tendermint-8\",\n                connection_id: \"connection-2\",\n              },\n              id: \"connection-136\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-103\",\n                counterPartyChannelId: \"channel-2\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"phoenix-1\": {\n              client_id: \"07-tendermint-39\",\n              counterparty: {\n                client_id: \"07-tendermint-7\",\n                connection_id: \"connection-10\",\n              },\n              id: \"connection-21\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-11\",\n                counterPartyChannelId: \"channel-6\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"pio-mainnet-1\": {\n              client_id: \"07-tendermint-175\",\n              counterparty: {\n                client_id: \"07-tendermint-35\",\n                connection_id: \"connection-12\",\n              },\n              id: \"connection-153\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-116\",\n                counterPartyChannelId: \"channel-9\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"pirin-1\": {\n              client_id: \"07-tendermint-205\",\n              counterparty: {\n                client_id: \"07-tendermint-17\",\n                connection_id: \"connection-13\",\n              },\n              id: \"connection-186\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-143\",\n                counterPartyChannelId: \"channel-10177\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"pryzm-1\": {\n              client_id: \"07-tendermint-224\",\n              counterparty: {\n                client_id: \"07-tendermint-7\",\n                connection_id: \"connection-7\",\n              },\n              id: \"connection-209\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-155\",\n                counterPartyChannelId: \"channel-13\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"secret-4\": {\n              client_id: \"07-tendermint-40\",\n              counterparty: {\n                client_id: \"07-tendermint-44\",\n                connection_id: \"connection-26\",\n              },\n              id: \"connection-22\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-12\",\n                counterPartyChannelId: \"channel-20\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"shido_9008-1\": {\n              client_id: \"07-tendermint-210\",\n              counterparty: {\n                client_id: \"07-tendermint-1\",\n                connection_id: \"connection-1\",\n              },\n              id: \"connection-191\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-148\",\n                counterPartyChannelId: \"channel-1\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"stride-1\": {\n              client_id: \"07-tendermint-93\",\n              counterparty: {\n                client_id: \"07-tendermint-75\",\n                connection_id: \"connection-60\",\n              },\n              id: \"connection-78\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-64\",\n                counterPartyChannelId: \"channel-69\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n          },\n          icqEnabled: false,\n          namespace: \"cosmos\",\n          reference: \"axelar-dojo-1\",\n          stakingTokens: [\n            {\n              denom: \"uaxl\",\n            },\n          ],\n        },\n        noble: {\n          bech32Prefix: \"noble\",\n          chainId: \"noble-1\",\n          connections: {\n            \"agoric-3\": {\n              client_id: \"07-tendermint-32\",\n              counterparty: {\n                client_id: \"07-tendermint-77\",\n                connection_id: \"connection-72\",\n              },\n              id: \"connection-38\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-21\",\n                counterPartyChannelId: \"channel-62\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"beezee-1\": {\n              client_id: \"07-tendermint-112\",\n              counterparty: {\n                client_id: \"07-tendermint-9\",\n                connection_id: \"connection-3\",\n              },\n              id: \"connection-107\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-95\",\n                counterPartyChannelId: \"channel-3\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"core-1\": {\n              client_id: \"07-tendermint-61\",\n              counterparty: {\n                client_id: \"07-tendermint-160\",\n                connection_id: \"connection-198\",\n              },\n              id: \"connection-59\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-36\",\n                counterPartyChannelId: \"channel-132\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"coreum-mainnet-1\": {\n              client_id: \"07-tendermint-71\",\n              counterparty: {\n                client_id: \"07-tendermint-32\",\n                connection_id: \"connection-21\",\n              },\n              id: \"connection-72\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-49\",\n                counterPartyChannelId: \"channel-19\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"cosmoshub-4\": {\n              client_id: \"07-tendermint-4\",\n              counterparty: {\n                client_id: \"07-tendermint-1116\",\n                connection_id: \"connection-790\",\n              },\n              id: \"connection-12\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-4\",\n                counterPartyChannelId: \"channel-536\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"crescent-1\": {\n              client_id: \"07-tendermint-1\",\n              counterparty: {\n                client_id: \"07-tendermint-68\",\n                connection_id: \"connection-63\",\n              },\n              id: \"connection-1\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-0\",\n                counterPartyChannelId: \"channel-38\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"dydx-mainnet-1\": {\n              client_id: \"07-tendermint-59\",\n              counterparty: {\n                client_id: \"07-tendermint-0\",\n                connection_id: \"connection-0\",\n              },\n              id: \"connection-57\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-33\",\n                counterPartyChannelId: \"channel-0\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"dymension_1100-1\": {\n              client_id: \"07-tendermint-79\",\n              counterparty: {\n                client_id: \"07-tendermint-14\",\n                connection_id: \"connection-7\",\n              },\n              id: \"connection-80\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-62\",\n                counterPartyChannelId: \"channel-6\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"evmos_9001-2\": {\n              client_id: \"07-tendermint-12\",\n              counterparty: {\n                client_id: \"07-tendermint-106\",\n                connection_id: \"connection-63\",\n              },\n              id: \"connection-19\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-7\",\n                counterPartyChannelId: \"channel-64\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"haqq_11235-1\": {\n              client_id: \"07-tendermint-58\",\n              counterparty: {\n                client_id: \"07-tendermint-4\",\n                connection_id: \"connection-4\",\n              },\n              id: \"connection-56\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-32\",\n                counterPartyChannelId: \"channel-4\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"injective-1\": {\n              client_id: \"07-tendermint-57\",\n              counterparty: {\n                client_id: \"07-tendermint-212\",\n                connection_id: \"connection-195\",\n              },\n              id: \"connection-55\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-31\",\n                counterPartyChannelId: \"channel-148\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"juno-1\": {\n              client_id: \"07-tendermint-3\",\n              counterparty: {\n                client_id: \"07-tendermint-334\",\n                connection_id: \"connection-322\",\n              },\n              id: \"connection-8\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-3\",\n                counterPartyChannelId: \"channel-224\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"kaiyo-1\": {\n              client_id: \"07-tendermint-2\",\n              counterparty: {\n                client_id: \"07-tendermint-95\",\n                connection_id: \"connection-65\",\n              },\n              id: \"connection-4\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-2\",\n                counterPartyChannelId: \"channel-62\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"kava_2222-10\": {\n              client_id: \"07-tendermint-107\",\n              counterparty: {\n                client_id: \"07-tendermint-172\",\n                connection_id: \"connection-214\",\n              },\n              id: \"connection-102\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-88\",\n                counterPartyChannelId: \"channel-151\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"lava-mainnet-1\": {\n              client_id: \"07-tendermint-120\",\n              counterparty: {\n                client_id: \"07-tendermint-11\",\n                connection_id: \"connection-15\",\n              },\n              id: \"connection-115\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-105\",\n                counterPartyChannelId: \"channel-9\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"migaloo-1\": {\n              client_id: \"07-tendermint-19\",\n              counterparty: {\n                client_id: \"07-tendermint-113\",\n                connection_id: \"connection-89\",\n              },\n              id: \"connection-28\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-14\",\n                counterPartyChannelId: \"channel-60\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"neutron-1\": {\n              client_id: \"07-tendermint-25\",\n              counterparty: {\n                client_id: \"07-tendermint-40\",\n                connection_id: \"connection-31\",\n              },\n              id: \"connection-34\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-18\",\n                counterPartyChannelId: \"channel-30\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"omniflixhub-1\": {\n              client_id: \"07-tendermint-68\",\n              counterparty: {\n                client_id: \"07-tendermint-51\",\n                connection_id: \"connection-49\",\n              },\n              id: \"connection-65\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-44\",\n                counterPartyChannelId: \"channel-38\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"osmosis-1\": {\n              client_id: \"07-tendermint-0\",\n              counterparty: {\n                client_id: \"07-tendermint-2704\",\n                connection_id: \"connection-2241\",\n              },\n              id: \"connection-2\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-1\",\n                counterPartyChannelId: \"channel-750\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"pacific-1\": {\n              client_id: \"07-tendermint-64\",\n              counterparty: {\n                client_id: \"07-tendermint-45\",\n                connection_id: \"connection-77\",\n              },\n              id: \"connection-61\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-39\",\n                counterPartyChannelId: \"channel-45\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"phoenix-1\": {\n              client_id: \"07-tendermint-56\",\n              counterparty: {\n                client_id: \"07-tendermint-367\",\n                connection_id: \"connection-302\",\n              },\n              id: \"connection-54\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-30\",\n                counterPartyChannelId: \"channel-253\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"pio-mainnet-1\": {\n              client_id: \"07-tendermint-30\",\n              counterparty: {\n                client_id: \"07-tendermint-36\",\n                connection_id: \"connection-13\",\n              },\n              id: \"connection-37\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-20\",\n                counterPartyChannelId: \"channel-10\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"planq_7070-2\": {\n              client_id: \"07-tendermint-103\",\n              counterparty: {\n                client_id: \"07-tendermint-567\",\n                connection_id: \"connection-490\",\n              },\n              id: \"connection-95\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-82\",\n                counterPartyChannelId: \"channel-63\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"pryzm-1\": {\n              client_id: \"07-tendermint-100\",\n              counterparty: {\n                client_id: \"07-tendermint-5\",\n                connection_id: \"connection-5\",\n              },\n              id: \"connection-92\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-79\",\n                counterPartyChannelId: \"channel-5\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"secret-4\": {\n              client_id: \"07-tendermint-24\",\n              counterparty: {\n                client_id: \"07-tendermint-170\",\n                connection_id: \"connection-127\",\n              },\n              id: \"connection-33\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-17\",\n                counterPartyChannelId: \"channel-88\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"shido_9008-1\": {\n              client_id: \"07-tendermint-106\",\n              counterparty: {\n                client_id: \"07-tendermint-9\",\n                connection_id: \"connection-11\",\n              },\n              id: \"connection-99\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-87\",\n                counterPartyChannelId: \"channel-5\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"stargaze-1\": {\n              client_id: \"07-tendermint-16\",\n              counterparty: {\n                client_id: \"07-tendermint-287\",\n                connection_id: \"connection-214\",\n              },\n              id: \"connection-25\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-11\",\n                counterPartyChannelId: \"channel-204\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"titan_18888-1\": {\n              client_id: \"07-tendermint-114\",\n              counterparty: {\n                client_id: \"07-tendermint-1\",\n                connection_id: \"connection-0\",\n              },\n              id: \"connection-109\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-99\",\n                counterPartyChannelId: \"channel-0\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"umee-1\": {\n              client_id: \"07-tendermint-73\",\n              counterparty: {\n                client_id: \"07-tendermint-248\",\n                connection_id: \"connection-210\",\n              },\n              id: \"connection-74\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-51\",\n                counterPartyChannelId: \"channel-120\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n            \"vota-ash\": {\n              client_id: \"07-tendermint-111\",\n              counterparty: {\n                client_id: \"07-tendermint-23\",\n                connection_id: \"connection-29\",\n              },\n              id: \"connection-106\",\n              state: 3,\n              transferChannel: {\n                channelId: \"channel-94\",\n                counterPartyChannelId: \"channel-14\",\n                counterPartyPortId: \"transfer\",\n                ordering: 0,\n                portId: \"transfer\",\n                state: 3,\n                version: \"ics20-1\",\n              },\n            },\n          },\n          icqEnabled: false,\n          namespace: \"cosmos\",\n          reference: \"noble-1\",\n        },\n      },\n    },\n  },\n]);\nconst customManifest = {\n  publishChainInfo: {\n    consume: {\n      agoricNames: true,\n      agoricNamesAdmin: true,\n      chainStorage: true,\n    },\n    produce: {\n      chainInfoPublished: true,\n    },\n  },\n};\n\n// Make a behavior function and \"export\" it by way of script completion value.\n// It is constructed by an anonymous invocation to ensure the absence of a global binding\n// for makeCoreProposalBehavior, which may not be necessary but preserves behavior pre-dating\n// https://github.com/Agoric/agoric-sdk/pull/8712 .\nconst behavior = (({\n  manifestBundleRef,\n  getManifestCall: [manifestGetterName, ...manifestGetterArgs],\n  customManifest,\n  E,\n  log = console.info,\n  customRestoreRef,\n}) =\u003e {\n  const { entries, fromEntries } = Object;\n\n  /**\n   * Given an object whose properties may be promise-valued, return a promise\n   * for an analogous object in which each such value has been replaced with its\n   * fulfillment.\n   * This is a non-recursive form of endo `deeplyFulfilled`.\n   *\n   * @template T\n   * @param {{[K in keyof T]: (T[K] | Promise\u003cT[K]\u003e)}} obj\n   * @returns {Promise\u003cT\u003e}\n   */\n  const shallowlyFulfilled = async obj =\u003e {\n    if (!obj) {\n      return obj;\n    }\n    const awaitedEntries = await Promise.all(\n      entries(obj).map(async ([key, valueP]) =\u003e {\n        const value = await valueP;\n        return [key, value];\n      }),\n    );\n    return fromEntries(awaitedEntries);\n  };\n\n  const makeRestoreRef = (vatAdminSvc, zoe) =\u003e {\n    /** @type {(ref: import\\('./externalTypes.js').ManifestBundleRef) =\u003e Promise\u003cInstallation\u003cunknown\u003e\u003e} */\n    const defaultRestoreRef = async bundleRef =\u003e {\n      // extract-proposal.js creates these records, and bundleName is\n      // the optional name under which the bundle was installed into\n      // config.bundles\n      const bundleIdP =\n        'bundleName' in bundleRef\n          ? E(vatAdminSvc).getBundleIDByName(bundleRef.bundleName)\n          : bundleRef.bundleID;\n      const bundleID = await bundleIdP;\n      const label = bundleID.slice(0, 8);\n      return E(zoe).installBundleID(bundleID, label);\n    };\n    return defaultRestoreRef;\n  };\n\n  /** @param {ChainBootstrapSpace \u0026 BootstrapPowers \u0026 { evaluateBundleCap: any }} powers */\n  const coreProposalBehavior = async powers =\u003e {\n    // NOTE: `powers` is expected to match or be a superset of the above `permits` export,\n    // which should therefore be kept in sync with this deconstruction code.\n    // HOWEVER, do note that this function is invoked with at least the *union* of powers\n    // required by individual moduleBehaviors declared by the manifest getter, which is\n    // necessary so it can use `runModuleBehaviors` to provide the appropriate subset to\n    // each one (see ./writeCoreEvalParts.js).\n    // Handle `powers` with the requisite care.\n    const {\n      consume: { vatAdminSvc, zoe, agoricNamesAdmin },\n      evaluateBundleCap,\n      installation: { produce: produceInstallations },\n      modules: {\n        utils: { runModuleBehaviors },\n      },\n    } = powers;\n\n    // Get the on-chain installation containing the manifest and behaviors.\n    log('evaluateBundleCap', {\n      manifestBundleRef,\n      manifestGetterName,\n      vatAdminSvc,\n    });\n    let bcapP;\n    if ('bundleName' in manifestBundleRef) {\n      bcapP = E(vatAdminSvc).getNamedBundleCap(manifestBundleRef.bundleName);\n    } else if ('bundleID' in manifestBundleRef) {\n      bcapP = E(vatAdminSvc).getBundleCap(manifestBundleRef.bundleID);\n    } else {\n      const keys = Reflect.ownKeys(manifestBundleRef).map(key =\u003e\n        typeof key === 'string' ? JSON.stringify(key) : String(key),\n      );\n      const keysStr = `[${keys.join(', ')}]`;\n      throw Error(\n        `bundleRef must have own bundleName or bundleID, missing in ${keysStr}`,\n      );\n    }\n    const bundleCap = await bcapP;\n\n    const proposalNS = await evaluateBundleCap(bundleCap);\n\n    // Get the manifest and its metadata.\n    log('execute', {\n      manifestGetterName,\n      bundleExports: Object.keys(proposalNS),\n    });\n    const restoreRef = customRestoreRef || makeRestoreRef(vatAdminSvc, zoe);\n    const {\n      manifest,\n      options: rawOptions,\n      installations: rawInstallations,\n    } = await proposalNS[manifestGetterName](\n      harden({ restoreRef }),\n      ...manifestGetterArgs,\n    );\n\n    // Await promises in the returned options and installations records.\n    const [options, installations] = await Promise.all(\n      [rawOptions, rawInstallations].map(shallowlyFulfilled),\n    );\n\n    // Publish the installations for our dependencies.\n    const installationEntries = entries(installations || {});\n    if (installationEntries.length \u003e 0) {\n      const installAdmin = E(agoricNamesAdmin).lookupAdmin('installation');\n      await Promise.all(\n        installationEntries.map(([key, value]) =\u003e {\n          produceInstallations[key].reset();\n          produceInstallations[key].resolve(value);\n          return E(installAdmin).update(key, value);\n        }),\n      );\n    }\n\n    // Evaluate the manifest.\n    return runModuleBehaviors({\n      // Remember that `powers` may be arbitrarily broad.\n      allPowers: powers,\n      behaviors: proposalNS,\n      manifest: customManifest || manifest,\n      makeConfig: (name, _permit) =\u003e {\n        log('coreProposal:', name);\n        return { options };\n      },\n    });\n  };\n\n  return coreProposalBehavior;\n})({ manifestBundleRef, getManifestCall, customManifest, E });\nbehavior;\n"
                            },
                            {
                                "json_permits": "{\n  \"produce\": {\n    \"ymax0Kit\": true\n  },\n  \"consume\": {\n    \"localchain\": true,\n    \"cosmosInterchainService\": true,\n    \"chainStorage\": true,\n    \"chainTimerService\": true,\n    \"agoricNames\": true,\n    \"board\": true,\n    \"startUpgradable\": true,\n    \"zoe\": \"makeCoreProposalBehavior\",\n    \"chainInfoPublished\": true,\n    \"agoricNamesAdmin\": \"makeCoreProposalBehavior\",\n    \"vatAdminSvc\": \"makeCoreProposalBehavior\"\n  },\n  \"instance\": {\n    \"produce\": {\n      \"ymax0\": true\n    }\n  },\n  \"installation\": {\n    \"consume\": {\n      \"ymax0\": true\n    },\n    \"produce\": \"makeCoreProposalBehavior\"\n  },\n  \"brand\": {},\n  \"issuer\": {\n    \"consume\": {\n      \"BLD\": true,\n      \"USDC\": true,\n      \"PoC26\": true\n    }\n  },\n  \"evaluateBundleCap\": \"makeCoreProposalBehavior\",\n  \"modules\": {\n    \"utils\": {\n      \"runModuleBehaviors\": \"makeCoreProposalBehavior\"\n    }\n  }\n}",
                                "js_code": "// This is generated by writeCoreEval; please edit!\n/* eslint-disable */\n\nconst manifestBundleRef = {bundleID:\"b1-d217fb17508ebe5c94e9ab432a9d6f5aea5fba810f7e5d7cc1785a6235e378e8eb117199624eb2f0061fc39126150d6f833617d0c2c26a979b36b0bb81d88a61\"};\nconst getManifestCall = harden([\n  \"getManifestForPortfolio\",\n  {\n    installKeys: {\n      ymax0: {\n        bundleID: \"b1-1cfec33f0aea5488aefbbe6b861bf5211081ea139f1bc8bd03540c7b35d6dcb7342b5be675e183cbf2b9d3cd0f9098a2a5e4cf349ce56f11df33835d26d938d7\",\n      },\n    },\n    options: {\n      slots: [],\n      structure: {\n        axelarConfig: {\n          Arbitrum: {\n            axelarId: \"arbitrum-sepolia\",\n            chainInfo: {\n              cctpDestinationDomain: 3,\n              namespace: \"eip155\",\n              reference: \"421614\",\n            },\n            contracts: {\n              aavePool: \"0xBfC91D59fdAA134A4ED45f7B584cAf96D7792Eff\",\n              compound: \"0x\",\n              factory: \"0x\",\n              tokenMessenger: \"0x9f3B8679c73C2Fef8b59B4f3444d4e156fb70AA5\",\n              usdc: \"0x2f3A40A3db8a7e3D09B0adfEfbCe4f6F81927557\",\n            },\n          },\n          Avalanche: {\n            axelarId: \"Avalanche\",\n            chainInfo: {\n              cctpDestinationDomain: 1,\n              namespace: \"eip155\",\n              reference: \"43113\",\n            },\n            contracts: {\n              aavePool: \"0x8B9b2AF4afB389b4a70A474dfD4AdCD4a302bb40\",\n              compound: \"0x\",\n              factory: \"0x\",\n              tokenMessenger: \"0xeb08f243E5d3FCFF26A9E38Ae5520A669f4019d0\",\n              usdc: \"0x5425890298aed601595a70AB815c96711a31Bc65\",\n            },\n          },\n          Binance: {\n            axelarId: \"binance\",\n            chainInfo: {\n              namespace: \"eip155\",\n              reference: \"97\",\n            },\n            contracts: {\n              aavePool: \"0x\",\n              compound: \"0x\",\n              factory: \"0x\",\n              tokenMessenger: \"0x\",\n              usdc: \"0x\",\n            },\n          },\n          Ethereum: {\n            axelarId: \"ethereum-sepolia\",\n            chainInfo: {\n              cctpDestinationDomain: 0,\n              namespace: \"eip155\",\n              reference: \"11155111\",\n            },\n            contracts: {\n              aavePool: \"0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951\",\n              compound: \"0x\",\n              factory: \"0x\",\n              tokenMessenger: \"0x9f3B8679c73C2Fef8b59B4f3444d4e156fb70AA5\",\n              usdc: \"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\",\n            },\n          },\n          Fantom: {\n            axelarId: \"Fantom\",\n            chainInfo: {\n              namespace: \"eip155\",\n              reference: \"4002\",\n            },\n            contracts: {\n              aavePool: \"0x\",\n              compound: \"0x\",\n              factory: \"0x\",\n              tokenMessenger: \"0x\",\n              usdc: \"0x\",\n            },\n          },\n          Optimism: {\n            axelarId: \"optimism-sepolia\",\n            chainInfo: {\n              cctpDestinationDomain: 2,\n              namespace: \"eip155\",\n              reference: \"11155420\",\n            },\n            contracts: {\n              aavePool: \"0xb50201558B00496A145fE76f7424749556E326D8\",\n              compound: \"0x\",\n              factory: \"0x\",\n              tokenMessenger: \"0x9f3B8679c73C2Fef8b59B4f3444d4e156fb70AA5\",\n              usdc: \"0x4200000000000000000000000000000000000042\",\n            },\n          },\n          Polygon: {\n            axelarId: \"polygon-sepolia\",\n            chainInfo: {\n              cctpDestinationDomain: 7,\n              namespace: \"eip155\",\n              reference: \"80002\",\n            },\n            contracts: {\n              aavePool: \"0x\",\n              compound: \"0x\",\n              factory: \"0x\",\n              tokenMessenger: \"0x9f3B8679c73C2Fef8b59B4f3444d4e156fb70AA5\",\n              usdc: \"0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359\",\n            },\n          },\n        },\n      },\n    },\n  },\n]);\nconst customManifest = {\n  startPortfolio: {\n    brand: {},\n    consume: {\n      agoricNames: true,\n      board: true,\n      chainInfoPublished: true,\n      chainStorage: true,\n      chainTimerService: true,\n      cosmosInterchainService: true,\n      localchain: true,\n      startUpgradable: true,\n      zoe: true,\n    },\n    installation: {\n      consume: {\n        ymax0: true,\n      },\n    },\n    instance: {\n      produce: {\n        ymax0: true,\n      },\n    },\n    issuer: {\n      consume: {\n        BLD: true,\n        PoC26: true,\n        USDC: true,\n      },\n    },\n    produce: {\n      ymax0Kit: true,\n    },\n  },\n};\n\n// Make a behavior function and \"export\" it by way of script completion value.\n// It is constructed by an anonymous invocation to ensure the absence of a global binding\n// for makeCoreProposalBehavior, which may not be necessary but preserves behavior pre-dating\n// https://github.com/Agoric/agoric-sdk/pull/8712 .\nconst behavior = (({\n  manifestBundleRef,\n  getManifestCall: [manifestGetterName, ...manifestGetterArgs],\n  customManifest,\n  E,\n  log = console.info,\n  customRestoreRef,\n}) =\u003e {\n  const { entries, fromEntries } = Object;\n\n  /**\n   * Given an object whose properties may be promise-valued, return a promise\n   * for an analogous object in which each such value has been replaced with its\n   * fulfillment.\n   * This is a non-recursive form of endo `deeplyFulfilled`.\n   *\n   * @template T\n   * @param {{[K in keyof T]: (T[K] | Promise\u003cT[K]\u003e)}} obj\n   * @returns {Promise\u003cT\u003e}\n   */\n  const shallowlyFulfilled = async obj =\u003e {\n    if (!obj) {\n      return obj;\n    }\n    const awaitedEntries = await Promise.all(\n      entries(obj).map(async ([key, valueP]) =\u003e {\n        const value = await valueP;\n        return [key, value];\n      }),\n    );\n    return fromEntries(awaitedEntries);\n  };\n\n  const makeRestoreRef = (vatAdminSvc, zoe) =\u003e {\n    /** @type {(ref: import\\('./externalTypes.js').ManifestBundleRef) =\u003e Promise\u003cInstallation\u003cunknown\u003e\u003e} */\n    const defaultRestoreRef = async bundleRef =\u003e {\n      // extract-proposal.js creates these records, and bundleName is\n      // the optional name under which the bundle was installed into\n      // config.bundles\n      const bundleIdP =\n        'bundleName' in bundleRef\n          ? E(vatAdminSvc).getBundleIDByName(bundleRef.bundleName)\n          : bundleRef.bundleID;\n      const bundleID = await bundleIdP;\n      const label = bundleID.slice(0, 8);\n      return E(zoe).installBundleID(bundleID, label);\n    };\n    return defaultRestoreRef;\n  };\n\n  /** @param {ChainBootstrapSpace \u0026 BootstrapPowers \u0026 { evaluateBundleCap: any }} powers */\n  const coreProposalBehavior = async powers =\u003e {\n    // NOTE: `powers` is expected to match or be a superset of the above `permits` export,\n    // which should therefore be kept in sync with this deconstruction code.\n    // HOWEVER, do note that this function is invoked with at least the *union* of powers\n    // required by individual moduleBehaviors declared by the manifest getter, which is\n    // necessary so it can use `runModuleBehaviors` to provide the appropriate subset to\n    // each one (see ./writeCoreEvalParts.js).\n    // Handle `powers` with the requisite care.\n    const {\n      consume: { vatAdminSvc, zoe, agoricNamesAdmin },\n      evaluateBundleCap,\n      installation: { produce: produceInstallations },\n      modules: {\n        utils: { runModuleBehaviors },\n      },\n    } = powers;\n\n    // Get the on-chain installation containing the manifest and behaviors.\n    log('evaluateBundleCap', {\n      manifestBundleRef,\n      manifestGetterName,\n      vatAdminSvc,\n    });\n    let bcapP;\n    if ('bundleName' in manifestBundleRef) {\n      bcapP = E(vatAdminSvc).getNamedBundleCap(manifestBundleRef.bundleName);\n    } else if ('bundleID' in manifestBundleRef) {\n      bcapP = E(vatAdminSvc).getBundleCap(manifestBundleRef.bundleID);\n    } else {\n      const keys = Reflect.ownKeys(manifestBundleRef).map(key =\u003e\n        typeof key === 'string' ? JSON.stringify(key) : String(key),\n      );\n      const keysStr = `[${keys.join(', ')}]`;\n      throw Error(\n        `bundleRef must have own bundleName or bundleID, missing in ${keysStr}`,\n      );\n    }\n    const bundleCap = await bcapP;\n\n    const proposalNS = await evaluateBundleCap(bundleCap);\n\n    // Get the manifest and its metadata.\n    log('execute', {\n      manifestGetterName,\n      bundleExports: Object.keys(proposalNS),\n    });\n    const restoreRef = customRestoreRef || makeRestoreRef(vatAdminSvc, zoe);\n    const {\n      manifest,\n      options: rawOptions,\n      installations: rawInstallations,\n    } = await proposalNS[manifestGetterName](\n      harden({ restoreRef }),\n      ...manifestGetterArgs,\n    );\n\n    // Await promises in the returned options and installations records.\n    const [options, installations] = await Promise.all(\n      [rawOptions, rawInstallations].map(shallowlyFulfilled),\n    );\n\n    // Publish the installations for our dependencies.\n    const installationEntries = entries(installations || {});\n    if (installationEntries.length \u003e 0) {\n      const installAdmin = E(agoricNamesAdmin).lookupAdmin('installation');\n      await Promise.all(\n        installationEntries.map(([key, value]) =\u003e {\n          produceInstallations[key].reset();\n          produceInstallations[key].resolve(value);\n          return E(installAdmin).update(key, value);\n        }),\n      );\n    }\n\n    // Evaluate the manifest.\n    return runModuleBehaviors({\n      // Remember that `powers` may be arbitrarily broad.\n      allPowers: powers,\n      behaviors: proposalNS,\n      manifest: customManifest || manifest,\n      makeConfig: (name, _permit) =\u003e {\n        log('coreProposal:', name);\n        return { options };\n      },\n    });\n  };\n\n  return coreProposalBehavior;\n})({ manifestBundleRef, getManifestCall, customManifest, E });\nbehavior;\n"
                            }
                        ]
                    },
                    "initial_deposit": [
                        {
                            "denom": "ubld",
                            "amount": "5000000000"
                        }
                    ],
                    "proposer": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl"
                }
            ],
            "memo": "",
            "timeout_height": "0",
            "extension_options": [],
            "non_critical_extension_options": []
        },
        "auth_info": {
            "signer_infos": [
                {
                    "public_key": {
                        "@type": "/cosmos.crypto.secp256k1.PubKey",
                        "key": "Av4kNFBlI8pbH5Vr4en74Ma6nvT9kjqnD2FkUQfwNJUV"
                    },
                    "mode_info": {
                        "single": {
                            "mode": "SIGN_MODE_DIRECT"
                        }
                    },
                    "sequence": "23"
                }
            ],
            "fee": {
                "amount": [
                    {
                        "denom": "ubld",
                        "amount": "1002360"
                    }
                ],
                "gas_limit": "20047199",
                "payer": "",
                "granter": ""
            },
            "tip": null
        },
        "signatures": [
            "6ZJLZkp2Sx9S8+ajY/jafIxebdHlNMEPnzvE179lczhlkR+QnbvNqtQw+nAbpn0KJKC1Rs4DwHmm//2iZ80oVQ=="
        ]
    },
    "timestamp": "2025-07-15T23:47:37Z",
    "events": [
        {
            "type": "coin_spent",
            "attributes": [
                {
                    "key": "spender",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl",
                    "index": true
                },
                {
                    "key": "amount",
                    "value": "1002360ubld",
                    "index": true
                }
            ]
        },
        {
            "type": "coin_received",
            "attributes": [
                {
                    "key": "receiver",
                    "value": "agoric1ae0lmtzlgrcnla9xjkpaarq5d5dfez63h3nucl",
                    "index": true
                },
                {
                    "key": "amount",
                    "value": "1002360ubld",
                    "index": true
                }
            ]
        },
        {
            "type": "transfer",
            "attributes": [
                {
                    "key": "recipient",
                    "value": "agoric1ae0lmtzlgrcnla9xjkpaarq5d5dfez63h3nucl",
                    "index": true
                },
                {
                    "key": "sender",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl",
                    "index": true
                },
                {
                    "key": "amount",
                    "value": "1002360ubld",
                    "index": true
                }
            ]
        },
        {
            "type": "message",
            "attributes": [
                {
                    "key": "sender",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl",
                    "index": true
                }
            ]
        },
        {
            "type": "tx",
            "attributes": [
                {
                    "key": "fee",
                    "value": "1002360ubld",
                    "index": true
                },
                {
                    "key": "fee_payer",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl",
                    "index": true
                }
            ]
        },
        {
            "type": "tx",
            "attributes": [
                {
                    "key": "acc_seq",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl/23",
                    "index": true
                }
            ]
        },
        {
            "type": "tx",
            "attributes": [
                {
                    "key": "signature",
                    "value": "6ZJLZkp2Sx9S8+ajY/jafIxebdHlNMEPnzvE179lczhlkR+QnbvNqtQw+nAbpn0KJKC1Rs4DwHmm//2iZ80oVQ==",
                    "index": true
                }
            ]
        },
        {
            "type": "message",
            "attributes": [
                {
                    "key": "action",
                    "value": "/cosmos.gov.v1beta1.MsgSubmitProposal",
                    "index": true
                },
                {
                    "key": "sender",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl",
                    "index": true
                },
                {
                    "key": "module",
                    "value": "gov",
                    "index": true
                }
            ]
        },
        {
            "type": "submit_proposal",
            "attributes": [
                {
                    "key": "proposal_id",
                    "value": "100",
                    "index": true
                },
                {
                    "key": "proposal_messages",
                    "value": ",/cosmos.gov.v1.MsgExecLegacyContent",
                    "index": true
                }
            ]
        },
        {
            "type": "coin_spent",
            "attributes": [
                {
                    "key": "spender",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl",
                    "index": true
                },
                {
                    "key": "amount",
                    "value": "5000000000ubld",
                    "index": true
                }
            ]
        },
        {
            "type": "coin_received",
            "attributes": [
                {
                    "key": "receiver",
                    "value": "agoric10d07y265gmmuvt4z0w9aw880jnsr700jgl36x9",
                    "index": true
                },
                {
                    "key": "amount",
                    "value": "5000000000ubld",
                    "index": true
                }
            ]
        },
        {
            "type": "transfer",
            "attributes": [
                {
                    "key": "recipient",
                    "value": "agoric10d07y265gmmuvt4z0w9aw880jnsr700jgl36x9",
                    "index": true
                },
                {
                    "key": "sender",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl",
                    "index": true
                },
                {
                    "key": "amount",
                    "value": "5000000000ubld",
                    "index": true
                }
            ]
        },
        {
            "type": "message",
            "attributes": [
                {
                    "key": "sender",
                    "value": "agoric1amhrnyzvmzj7ugd83n0jk8lme64zlwdv6u52gl",
                    "index": true
                }
            ]
        },
        {
            "type": "proposal_deposit",
            "attributes": [
                {
                    "key": "amount",
                    "value": "5000000000ubld",
                    "index": true
                },
                {
                    "key": "proposal_id",
                    "value": "100",
                    "index": true
                }
            ]
        },
        {
            "type": "submit_proposal",
            "attributes": [
                {
                    "key": "voting_period_start",
                    "value": "100",
                    "index": true
                }
            ]
        }
    ]
}