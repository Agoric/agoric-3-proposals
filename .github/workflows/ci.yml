concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  test-package:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: |
          # Enable corepack for packageManager config
          corepack enable || sudo corepack enable
          yarn install

      - name: Lint repo
        run: yarn lint

      - name: Typecheck synthetic-chain
        run: yarn tsc
        working-directory: packages/synthetic-chain

      - name: Test synthetic-chain
        run: yarn test
        working-directory: packages/synthetic-chain

  test-proposals:
    permissions:
      contents: read
      id-token: write
      packages: write
    runs-on: 'depot-ubuntu-22.04-16'
    steps:
      - name: free up disk space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "=== After cleanup:"
          df -h
      - name: Generate Timestamp
        run: |
          echo "TIMESTAMP=$(date '+%s')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: depot/setup-action@v1
        with:
          oidc: true

      - run: depot configure-docker

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}

      - id: meta
        name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/a3p-emerynet

      - name: Install deps
        run: |
          corepack enable || sudo corepack enable
          yarn install

      - name: Prepare Docker config
        run: |
          yarn build-cli
          yarn synthetic-chain prepare-build

      # Verify that all "use" images build across platforms.
      - name: Build proposal "use" images
        uses: depot/bake-action@v1
        with:
          files: |
            ./docker-bake.json
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: use

      - name: Build and run proposal tests
        run: yarn test

      - name: Build and Push image
        run: |
          docker tag "${{ env.REGISTRY }}/${{ github.repository }}:latest" \
           "${{ env.REGISTRY }}/agoric/a3p-emerynet:${{ env.TIMESTAMP }}"
          docker push "${{ env.REGISTRY }}/agoric/a3p-emerynet:${{ env.TIMESTAMP }}"

name: Proposal tests

on:
  push:
    branches: [usman/reset-emerynet]
